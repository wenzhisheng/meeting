# port
server.port=8911
# character encoding
server.tomcat.uri-encoding=utf-8
# root path
server.servlet.context-path=/admin
# database connection
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# mybati config
spring.datasource.mapperLocations=classpath*:com/admin/*/dao/*.xml

# assign log4j2 config file
logging.config=classpath:log4j2.xml
# Configure the print sql
logging.level.com.weilaizhe.admin=debug
logging.level.com.weilaizhe.common=debug

## database configuration
# Database data source
spring.datasource.url=jdbc:mysql://220.128.125.76:3306/weilaizhe?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useUnicode=true&useSSL=false
# Database account
spring.datasource.username=root
# Database password
spring.datasource.password=weilaizhe7898
# Database driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# The initial connection
spring.datasource.initialSize=5
# Minimum free
spring.datasource.minIdle=5
# Maximum connections
spring.datasource.maxActive= 20
# Maximum wait milliseconds
spring.datasource.maxWait= 60000
# Detection interval
spring.datasource.timeBetweenEvictionRunsMillis= 60000
# standby time
spring.datasource.minEvictableIdleTimeMillis= 300000
# Verify that the connection is valid
spring.datasource.validationQuery= SELECT 1 FROM DUAL
# Check when connecting
spring.datasource.testWhileIdle= true
# Verify that the connection is valid
spring.datasource.testOnBorrow= false
# Verify that the connection is valid
spring.datasource.testOnReturn= false
# Whether the cache
spring.datasource.poolPreparedStatements= true
# Maximum thread pool connection
spring.datasource.maxPoolPreparedStatementPerConnectionSize= 20
# Configure extensions
spring.datasource.filters= stat,wall,log4j
# connection pool
spring.datasource.connectionProperties= druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# Global data source
spring.datasource.useGlobalDataSourceStat= true

## redis config
# Command wait timeout Unit: milliseconds
cluster-servers-config.timeout=3000
# Number of command failed retries
cluster-servers-config.retry-attempts=3
# Maximum number of execution failures
cluster-servers-config.failed-attempts=3
# password
cluster-servers-config.password=Weilaizhe6379
# Minimum number of idle connections
cluster-servers-config.connection-minimum-idle-size=32
# Connection pool size
cluster-servers-config.connection-pool-size=64
# Ping Connection Interval size
cluster-servers-config.ping-connection-interval-size=60
# Size from connection pool
cluster-servers-config.slave-connection-pool-size=64
# Primary connection pool size
cluster-servers-config.master-connection-pool-size=64
# Cluster mode configures IP
cluster-servers-config.cluster-addresses=redis://220.128.125.76:7001,redis://220.128.125.76:7002,redis://220.128.125.76:7003,redis://220.128.125.76:7004,redis://220.128.125.76:7005,redis://220.128.125.76:7006

## rocketMQ Producer allocation
# Producer group name The setting of sending the same kind of message is the same group, which is guaranteed to be unique. By default, no setting is required��rocketmq will use ip@pid As a unique identifier
rocketmq.productor.groupName = productor
# MQ NameServer Service address Multiple use; separated
rocketmq.productor.namesrvAddr = 220.128.125.76:9876;61.216.31.153:9876
# If different producers in the same JVM need to send messages to different mq clusters, different instanceName Settings need to be set
rocketmq.productor.instanceName = productor
# Maximum message length 1024*128
rocketmq.productor.maxMessageSize = 131072
# Send message timeout time
rocketmq.productor.sendMsgTimeout = 10000
## rocketMQ Consumer common configuration
# MQ NameServer Service address Multiple use; separated
rocketmq.consumer.namesrvAddr = 220.128.125.76:9876;61.216.31.153:9876
# Minimum message thread
rocketmq.consumer.consumeThreadMin = 20
# Maximum message thread
rocketmq.consumer.consumeThreadMax = 100

# Multipart upload size control
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=100MB

# Integer Caused by giving an empty string swagger The request console outputs an exception resolution
logging.level.io.swagger.models.parameters.AbstractSerializableParameter=error

## XSS config
# Define illegal character
xss.array=<,>,/>,</,|,&lt,&gt,\\,&#40,&#41,&#39,eval(,src=,url=,<a,<img,<script,alert(,document.,open(,<iframe,<meta,<span,<pre,style,javascript,onerror
# Permissible request
xss.permission.request=/member/update,/member/insert

##tomcat config
# Maximum connections
server.tomcat.max-connections=2000
# Minimum idle thread
server.tomcat.min-spare-threads=200
# The biggest thread
server.tomcat.max-threads=2000
# time-out period
server.connection-timeout=15000
